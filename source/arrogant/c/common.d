module arrogant.c.common;
import arrogant.c.modest;
auto MYHTML_FAILED(T)(auto ref T _status_) { return _status_ != myhtml_status_t.MyHTML_STATUS_OK; }
enum MyEncodingList {
  default_ = myencoding_list.MyENCODING_DEFAULT,
  notDetermined = myencoding_list.MyENCODING_NOT_DETERMINED,
  utf8 = myencoding_list.MyENCODING_UTF_8,
  utf16le = myencoding_list.MyENCODING_UTF_16LE,
  utf16be = myencoding_list.MyENCODING_UTF_16BE,
  xUserDefined = myencoding_list.MyENCODING_X_USER_DEFINED,
  big5 = myencoding_list.MyENCODING_BIG5,
  eucJp = myencoding_list.MyENCODING_EUC_JP,
  eucKr = myencoding_list.MyENCODING_EUC_KR,
  gb18030 = myencoding_list.MyENCODING_GB18030,
  gbk = myencoding_list.MyENCODING_GBK,
  ibm866 = myencoding_list.MyENCODING_IBM866,
  iso2022Jp = myencoding_list.MyENCODING_ISO_2022_JP,
  iso885910 = myencoding_list.MyENCODING_ISO_8859_10,
  iso885913 = myencoding_list.MyENCODING_ISO_8859_13,
  iso885914 = myencoding_list.MyENCODING_ISO_8859_14,
  iso885915 = myencoding_list.MyENCODING_ISO_8859_15,
  iso885916 = myencoding_list.MyENCODING_ISO_8859_16,
  iso88592 = myencoding_list.MyENCODING_ISO_8859_2,
  iso88593 = myencoding_list.MyENCODING_ISO_8859_3,
  iso88594 = myencoding_list.MyENCODING_ISO_8859_4,
  iso88595 = myencoding_list.MyENCODING_ISO_8859_5,
  iso88596 = myencoding_list.MyENCODING_ISO_8859_6,
  iso88597 = myencoding_list.MyENCODING_ISO_8859_7,
  iso88598 = myencoding_list.MyENCODING_ISO_8859_8,
  iso88598I = myencoding_list.MyENCODING_ISO_8859_8_I,
  koi8R = myencoding_list.MyENCODING_KOI8_R,
  koi8U = myencoding_list.MyENCODING_KOI8_U,
  macintosh = myencoding_list.MyENCODING_MACINTOSH,
  shiftJis = myencoding_list.MyENCODING_SHIFT_JIS,
  windows1250 = myencoding_list.MyENCODING_WINDOWS_1250,
  windows1251 = myencoding_list.MyENCODING_WINDOWS_1251,
  windows1252 = myencoding_list.MyENCODING_WINDOWS_1252,
  windows1253 = myencoding_list.MyENCODING_WINDOWS_1253,
  windows1254 = myencoding_list.MyENCODING_WINDOWS_1254,
  windows1255 = myencoding_list.MyENCODING_WINDOWS_1255,
  windows1256 = myencoding_list.MyENCODING_WINDOWS_1256,
  windows1257 = myencoding_list.MyENCODING_WINDOWS_1257,
  windows1258 = myencoding_list.MyENCODING_WINDOWS_1258,
  windows874 = myencoding_list.MyENCODING_WINDOWS_874,
  xMacCyrillic = myencoding_list.MyENCODING_X_MAC_CYRILLIC,
  lastEntry = myencoding_list.MyENCODING_LAST_ENTRY,
}
enum MyHtmlTagId {
  _undef = myhtml_tags.MyHTML_TAG__UNDEF,
  _text = myhtml_tags.MyHTML_TAG__TEXT,
  _comment = myhtml_tags.MyHTML_TAG__COMMENT,
  _doctype = myhtml_tags.MyHTML_TAG__DOCTYPE,
  a = myhtml_tags.MyHTML_TAG_A,
  abbr = myhtml_tags.MyHTML_TAG_ABBR,
  acronym = myhtml_tags.MyHTML_TAG_ACRONYM,
  address = myhtml_tags.MyHTML_TAG_ADDRESS,
  annotationXml = myhtml_tags.MyHTML_TAG_ANNOTATION_XML,
  applet = myhtml_tags.MyHTML_TAG_APPLET,
  area = myhtml_tags.MyHTML_TAG_AREA,
  article = myhtml_tags.MyHTML_TAG_ARTICLE,
  aside = myhtml_tags.MyHTML_TAG_ASIDE,
  audio = myhtml_tags.MyHTML_TAG_AUDIO,
  b = myhtml_tags.MyHTML_TAG_B,
  base = myhtml_tags.MyHTML_TAG_BASE,
  basefont = myhtml_tags.MyHTML_TAG_BASEFONT,
  bdi = myhtml_tags.MyHTML_TAG_BDI,
  bdo = myhtml_tags.MyHTML_TAG_BDO,
  bgsound = myhtml_tags.MyHTML_TAG_BGSOUND,
  big = myhtml_tags.MyHTML_TAG_BIG,
  blink = myhtml_tags.MyHTML_TAG_BLINK,
  blockquote = myhtml_tags.MyHTML_TAG_BLOCKQUOTE,
  body = myhtml_tags.MyHTML_TAG_BODY,
  br = myhtml_tags.MyHTML_TAG_BR,
  button = myhtml_tags.MyHTML_TAG_BUTTON,
  canvas = myhtml_tags.MyHTML_TAG_CANVAS,
  caption = myhtml_tags.MyHTML_TAG_CAPTION,
  center = myhtml_tags.MyHTML_TAG_CENTER,
  cite = myhtml_tags.MyHTML_TAG_CITE,
  code = myhtml_tags.MyHTML_TAG_CODE,
  col = myhtml_tags.MyHTML_TAG_COL,
  colgroup = myhtml_tags.MyHTML_TAG_COLGROUP,
  command = myhtml_tags.MyHTML_TAG_COMMAND,
  comment = myhtml_tags.MyHTML_TAG_COMMENT,
  datalist = myhtml_tags.MyHTML_TAG_DATALIST,
  dd = myhtml_tags.MyHTML_TAG_DD,
  del = myhtml_tags.MyHTML_TAG_DEL,
  details = myhtml_tags.MyHTML_TAG_DETAILS,
  dfn = myhtml_tags.MyHTML_TAG_DFN,
  dialog = myhtml_tags.MyHTML_TAG_DIALOG,
  dir = myhtml_tags.MyHTML_TAG_DIR,
  div = myhtml_tags.MyHTML_TAG_DIV,
  dl = myhtml_tags.MyHTML_TAG_DL,
  dt = myhtml_tags.MyHTML_TAG_DT,
  em = myhtml_tags.MyHTML_TAG_EM,
  embed = myhtml_tags.MyHTML_TAG_EMBED,
  fieldset = myhtml_tags.MyHTML_TAG_FIELDSET,
  figcaption = myhtml_tags.MyHTML_TAG_FIGCAPTION,
  figure = myhtml_tags.MyHTML_TAG_FIGURE,
  font = myhtml_tags.MyHTML_TAG_FONT,
  footer = myhtml_tags.MyHTML_TAG_FOOTER,
  form = myhtml_tags.MyHTML_TAG_FORM,
  frame = myhtml_tags.MyHTML_TAG_FRAME,
  frameset = myhtml_tags.MyHTML_TAG_FRAMESET,
  h1 = myhtml_tags.MyHTML_TAG_H1,
  h2 = myhtml_tags.MyHTML_TAG_H2,
  h3 = myhtml_tags.MyHTML_TAG_H3,
  h4 = myhtml_tags.MyHTML_TAG_H4,
  h5 = myhtml_tags.MyHTML_TAG_H5,
  h6 = myhtml_tags.MyHTML_TAG_H6,
  head = myhtml_tags.MyHTML_TAG_HEAD,
  header = myhtml_tags.MyHTML_TAG_HEADER,
  hgroup = myhtml_tags.MyHTML_TAG_HGROUP,
  hr = myhtml_tags.MyHTML_TAG_HR,
  html = myhtml_tags.MyHTML_TAG_HTML,
  i = myhtml_tags.MyHTML_TAG_I,
  iframe = myhtml_tags.MyHTML_TAG_IFRAME,
  image = myhtml_tags.MyHTML_TAG_IMAGE,
  img = myhtml_tags.MyHTML_TAG_IMG,
  input = myhtml_tags.MyHTML_TAG_INPUT,
  ins = myhtml_tags.MyHTML_TAG_INS,
  isindex = myhtml_tags.MyHTML_TAG_ISINDEX,
  kbd = myhtml_tags.MyHTML_TAG_KBD,
  keygen = myhtml_tags.MyHTML_TAG_KEYGEN,
  label = myhtml_tags.MyHTML_TAG_LABEL,
  legend = myhtml_tags.MyHTML_TAG_LEGEND,
  li = myhtml_tags.MyHTML_TAG_LI,
  link = myhtml_tags.MyHTML_TAG_LINK,
  listing = myhtml_tags.MyHTML_TAG_LISTING,
  main = myhtml_tags.MyHTML_TAG_MAIN,
  map = myhtml_tags.MyHTML_TAG_MAP,
  mark = myhtml_tags.MyHTML_TAG_MARK,
  marquee = myhtml_tags.MyHTML_TAG_MARQUEE,
  menu = myhtml_tags.MyHTML_TAG_MENU,
  menuitem = myhtml_tags.MyHTML_TAG_MENUITEM,
  meta = myhtml_tags.MyHTML_TAG_META,
  meter = myhtml_tags.MyHTML_TAG_METER,
  mtext = myhtml_tags.MyHTML_TAG_MTEXT,
  nav = myhtml_tags.MyHTML_TAG_NAV,
  nobr = myhtml_tags.MyHTML_TAG_NOBR,
  noembed = myhtml_tags.MyHTML_TAG_NOEMBED,
  noframes = myhtml_tags.MyHTML_TAG_NOFRAMES,
  noscript = myhtml_tags.MyHTML_TAG_NOSCRIPT,
  object = myhtml_tags.MyHTML_TAG_OBJECT,
  ol = myhtml_tags.MyHTML_TAG_OL,
  optgroup = myhtml_tags.MyHTML_TAG_OPTGROUP,
  option = myhtml_tags.MyHTML_TAG_OPTION,
  output = myhtml_tags.MyHTML_TAG_OUTPUT,
  p = myhtml_tags.MyHTML_TAG_P,
  param = myhtml_tags.MyHTML_TAG_PARAM,
  plaintext = myhtml_tags.MyHTML_TAG_PLAINTEXT,
  pre = myhtml_tags.MyHTML_TAG_PRE,
  progress = myhtml_tags.MyHTML_TAG_PROGRESS,
  q = myhtml_tags.MyHTML_TAG_Q,
  rb = myhtml_tags.MyHTML_TAG_RB,
  rp = myhtml_tags.MyHTML_TAG_RP,
  rt = myhtml_tags.MyHTML_TAG_RT,
  rtc = myhtml_tags.MyHTML_TAG_RTC,
  ruby = myhtml_tags.MyHTML_TAG_RUBY,
  s = myhtml_tags.MyHTML_TAG_S,
  samp = myhtml_tags.MyHTML_TAG_SAMP,
  script = myhtml_tags.MyHTML_TAG_SCRIPT,
  section = myhtml_tags.MyHTML_TAG_SECTION,
  select = myhtml_tags.MyHTML_TAG_SELECT,
  small = myhtml_tags.MyHTML_TAG_SMALL,
  source = myhtml_tags.MyHTML_TAG_SOURCE,
  span = myhtml_tags.MyHTML_TAG_SPAN,
  strike = myhtml_tags.MyHTML_TAG_STRIKE,
  strong = myhtml_tags.MyHTML_TAG_STRONG,
  style = myhtml_tags.MyHTML_TAG_STYLE,
  sub = myhtml_tags.MyHTML_TAG_SUB,
  summary = myhtml_tags.MyHTML_TAG_SUMMARY,
  sup = myhtml_tags.MyHTML_TAG_SUP,
  svg = myhtml_tags.MyHTML_TAG_SVG,
  table = myhtml_tags.MyHTML_TAG_TABLE,
  tbody = myhtml_tags.MyHTML_TAG_TBODY,
  td = myhtml_tags.MyHTML_TAG_TD,
  template_ = myhtml_tags.MyHTML_TAG_TEMPLATE,
  textarea = myhtml_tags.MyHTML_TAG_TEXTAREA,
  tfoot = myhtml_tags.MyHTML_TAG_TFOOT,
  th = myhtml_tags.MyHTML_TAG_TH,
  thead = myhtml_tags.MyHTML_TAG_THEAD,
  time = myhtml_tags.MyHTML_TAG_TIME,
  title = myhtml_tags.MyHTML_TAG_TITLE,
  tr = myhtml_tags.MyHTML_TAG_TR,
  track = myhtml_tags.MyHTML_TAG_TRACK,
  tt = myhtml_tags.MyHTML_TAG_TT,
  u = myhtml_tags.MyHTML_TAG_U,
  ul = myhtml_tags.MyHTML_TAG_UL,
  var = myhtml_tags.MyHTML_TAG_VAR,
  video = myhtml_tags.MyHTML_TAG_VIDEO,
  wbr = myhtml_tags.MyHTML_TAG_WBR,
  xmp = myhtml_tags.MyHTML_TAG_XMP,
  altglyph = myhtml_tags.MyHTML_TAG_ALTGLYPH,
  altglyphdef = myhtml_tags.MyHTML_TAG_ALTGLYPHDEF,
  altglyphitem = myhtml_tags.MyHTML_TAG_ALTGLYPHITEM,
  animate = myhtml_tags.MyHTML_TAG_ANIMATE,
  animatecolor = myhtml_tags.MyHTML_TAG_ANIMATECOLOR,
  animatemotion = myhtml_tags.MyHTML_TAG_ANIMATEMOTION,
  animatetransform = myhtml_tags.MyHTML_TAG_ANIMATETRANSFORM,
  circle = myhtml_tags.MyHTML_TAG_CIRCLE,
  clippath = myhtml_tags.MyHTML_TAG_CLIPPATH,
  colorProfile = myhtml_tags.MyHTML_TAG_COLOR_PROFILE,
  cursor = myhtml_tags.MyHTML_TAG_CURSOR,
  defs = myhtml_tags.MyHTML_TAG_DEFS,
  desc = myhtml_tags.MyHTML_TAG_DESC,
  ellipse = myhtml_tags.MyHTML_TAG_ELLIPSE,
  feblend = myhtml_tags.MyHTML_TAG_FEBLEND,
  fecolormatrix = myhtml_tags.MyHTML_TAG_FECOLORMATRIX,
  fecomponenttransfer = myhtml_tags.MyHTML_TAG_FECOMPONENTTRANSFER,
  fecomposite = myhtml_tags.MyHTML_TAG_FECOMPOSITE,
  feconvolvematrix = myhtml_tags.MyHTML_TAG_FECONVOLVEMATRIX,
  fediffuselighting = myhtml_tags.MyHTML_TAG_FEDIFFUSELIGHTING,
  fedisplacementmap = myhtml_tags.MyHTML_TAG_FEDISPLACEMENTMAP,
  fedistantlight = myhtml_tags.MyHTML_TAG_FEDISTANTLIGHT,
  fedropshadow = myhtml_tags.MyHTML_TAG_FEDROPSHADOW,
  feflood = myhtml_tags.MyHTML_TAG_FEFLOOD,
  fefunca = myhtml_tags.MyHTML_TAG_FEFUNCA,
  fefuncb = myhtml_tags.MyHTML_TAG_FEFUNCB,
  fefuncg = myhtml_tags.MyHTML_TAG_FEFUNCG,
  fefuncr = myhtml_tags.MyHTML_TAG_FEFUNCR,
  fegaussianblur = myhtml_tags.MyHTML_TAG_FEGAUSSIANBLUR,
  feimage = myhtml_tags.MyHTML_TAG_FEIMAGE,
  femerge = myhtml_tags.MyHTML_TAG_FEMERGE,
  femergenode = myhtml_tags.MyHTML_TAG_FEMERGENODE,
  femorphology = myhtml_tags.MyHTML_TAG_FEMORPHOLOGY,
  feoffset = myhtml_tags.MyHTML_TAG_FEOFFSET,
  fepointlight = myhtml_tags.MyHTML_TAG_FEPOINTLIGHT,
  fespecularlighting = myhtml_tags.MyHTML_TAG_FESPECULARLIGHTING,
  fespotlight = myhtml_tags.MyHTML_TAG_FESPOTLIGHT,
  fetile = myhtml_tags.MyHTML_TAG_FETILE,
  feturbulence = myhtml_tags.MyHTML_TAG_FETURBULENCE,
  filter = myhtml_tags.MyHTML_TAG_FILTER,
  fontFace = myhtml_tags.MyHTML_TAG_FONT_FACE,
  fontFaceFormat = myhtml_tags.MyHTML_TAG_FONT_FACE_FORMAT,
  fontFaceName = myhtml_tags.MyHTML_TAG_FONT_FACE_NAME,
  fontFaceSrc = myhtml_tags.MyHTML_TAG_FONT_FACE_SRC,
  fontFaceUri = myhtml_tags.MyHTML_TAG_FONT_FACE_URI,
  foreignobject = myhtml_tags.MyHTML_TAG_FOREIGNOBJECT,
  g = myhtml_tags.MyHTML_TAG_G,
  glyph = myhtml_tags.MyHTML_TAG_GLYPH,
  glyphref = myhtml_tags.MyHTML_TAG_GLYPHREF,
  hkern = myhtml_tags.MyHTML_TAG_HKERN,
  line = myhtml_tags.MyHTML_TAG_LINE,
  lineargradient = myhtml_tags.MyHTML_TAG_LINEARGRADIENT,
  marker = myhtml_tags.MyHTML_TAG_MARKER,
  mask = myhtml_tags.MyHTML_TAG_MASK,
  metadata = myhtml_tags.MyHTML_TAG_METADATA,
  missingGlyph = myhtml_tags.MyHTML_TAG_MISSING_GLYPH,
  mpath = myhtml_tags.MyHTML_TAG_MPATH,
  path = myhtml_tags.MyHTML_TAG_PATH,
  pattern = myhtml_tags.MyHTML_TAG_PATTERN,
  polygon = myhtml_tags.MyHTML_TAG_POLYGON,
  polyline = myhtml_tags.MyHTML_TAG_POLYLINE,
  radialgradient = myhtml_tags.MyHTML_TAG_RADIALGRADIENT,
  rect = myhtml_tags.MyHTML_TAG_RECT,
  set = myhtml_tags.MyHTML_TAG_SET,
  stop = myhtml_tags.MyHTML_TAG_STOP,
  switch_ = myhtml_tags.MyHTML_TAG_SWITCH,
  symbol = myhtml_tags.MyHTML_TAG_SYMBOL,
  text = myhtml_tags.MyHTML_TAG_TEXT,
  textpath = myhtml_tags.MyHTML_TAG_TEXTPATH,
  tref = myhtml_tags.MyHTML_TAG_TREF,
  tspan = myhtml_tags.MyHTML_TAG_TSPAN,
  use = myhtml_tags.MyHTML_TAG_USE,
  view = myhtml_tags.MyHTML_TAG_VIEW,
  vkern = myhtml_tags.MyHTML_TAG_VKERN,
  math = myhtml_tags.MyHTML_TAG_MATH,
  maction = myhtml_tags.MyHTML_TAG_MACTION,
  maligngroup = myhtml_tags.MyHTML_TAG_MALIGNGROUP,
  malignmark = myhtml_tags.MyHTML_TAG_MALIGNMARK,
  menclose = myhtml_tags.MyHTML_TAG_MENCLOSE,
  merror = myhtml_tags.MyHTML_TAG_MERROR,
  mfenced = myhtml_tags.MyHTML_TAG_MFENCED,
  mfrac = myhtml_tags.MyHTML_TAG_MFRAC,
  mglyph = myhtml_tags.MyHTML_TAG_MGLYPH,
  mi = myhtml_tags.MyHTML_TAG_MI,
  mlabeledtr = myhtml_tags.MyHTML_TAG_MLABELEDTR,
  mlongdiv = myhtml_tags.MyHTML_TAG_MLONGDIV,
  mmultiscripts = myhtml_tags.MyHTML_TAG_MMULTISCRIPTS,
  mn = myhtml_tags.MyHTML_TAG_MN,
  mo = myhtml_tags.MyHTML_TAG_MO,
  mover = myhtml_tags.MyHTML_TAG_MOVER,
  mpadded = myhtml_tags.MyHTML_TAG_MPADDED,
  mphantom = myhtml_tags.MyHTML_TAG_MPHANTOM,
  mroot = myhtml_tags.MyHTML_TAG_MROOT,
  mrow = myhtml_tags.MyHTML_TAG_MROW,
  ms = myhtml_tags.MyHTML_TAG_MS,
  mscarries = myhtml_tags.MyHTML_TAG_MSCARRIES,
  mscarry = myhtml_tags.MyHTML_TAG_MSCARRY,
  msgroup = myhtml_tags.MyHTML_TAG_MSGROUP,
  msline = myhtml_tags.MyHTML_TAG_MSLINE,
  mspace = myhtml_tags.MyHTML_TAG_MSPACE,
  msqrt = myhtml_tags.MyHTML_TAG_MSQRT,
  msrow = myhtml_tags.MyHTML_TAG_MSROW,
  mstack = myhtml_tags.MyHTML_TAG_MSTACK,
  mstyle = myhtml_tags.MyHTML_TAG_MSTYLE,
  msub = myhtml_tags.MyHTML_TAG_MSUB,
  msup = myhtml_tags.MyHTML_TAG_MSUP,
  msubsup = myhtml_tags.MyHTML_TAG_MSUBSUP,
  _endOfFile = myhtml_tags.MyHTML_TAG__END_OF_FILE,
  firstEntry = myhtml_tags.MyHTML_TAG_FIRST_ENTRY,
  lastEntry = myhtml_tags.MyHTML_TAG_LAST_ENTRY,
}
enum MyHtmlOptions {
  default_ = myhtml_options.MyHTML_OPTIONS_DEFAULT,
  parseModeSingle = myhtml_options.MyHTML_OPTIONS_PARSE_MODE_SINGLE,
  parseModeAllInOne = myhtml_options.MyHTML_OPTIONS_PARSE_MODE_ALL_IN_ONE,
  parseModeSeparately = myhtml_options.MyHTML_OPTIONS_PARSE_MODE_SEPARATELY,
}
enum MyHtmlNamespace {
  undef = myhtml_namespace.MyHTML_NAMESPACE_UNDEF,
  html = myhtml_namespace.MyHTML_NAMESPACE_HTML,
  mathml = myhtml_namespace.MyHTML_NAMESPACE_MATHML,
  svg = myhtml_namespace.MyHTML_NAMESPACE_SVG,
  xlink = myhtml_namespace.MyHTML_NAMESPACE_XLINK,
  xml = myhtml_namespace.MyHTML_NAMESPACE_XML,
  xmlns = myhtml_namespace.MyHTML_NAMESPACE_XMLNS,
  any = myhtml_namespace.MyHTML_NAMESPACE_ANY,
  lastEntry = myhtml_namespace.MyHTML_NAMESPACE_LAST_ENTRY,
}
